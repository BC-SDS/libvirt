From 0d5e46dd87acebaba9c78fe0d7ad8d314944897a Mon Sep 17 00:00:00 2001
From: yuxing <yu.xing@zte.com.cn>
Date: Fri, 14 Apr 2017 14:28:19 +0800
Subject: [PATCH] libvirt: add support to ZTE DVS.

modified vhost-user to ZTE DVS.

Signed-off-by: yuxing <yu.xing@zte.com.cn>
---
 src/conf/domain_conf.c                             | 117 +++++++++-
 src/conf/domain_conf.h                             |   7 +
 src/lxc/lxc_driver.c                               |   2 +-
 src/lxc/lxc_process.c                              |   6 +-
 src/network/bridge_driver.c                        |   3 +-
 src/qemu/qemu_command.c                            |  81 ++++++-
 src/qemu/qemu_driver.c                             | 243 ++++++++++++++++++++-
 src/qemu/qemu_hotplug.c                            |  71 +++++-
 src/qemu/qemu_migration.c                          |   4 +-
 src/qemu/qemu_process.c                            |  18 +-
 src/security/virt-aa-helper.c                      |  12 +
 src/uml/uml_conf.c                                 |   2 +-
 src/util/virnetdevopenvswitch.c                    |  63 +++++-
 src/util/virnetdevopenvswitch.h                    |  11 +-
 src/util/virnetdevtap.c                            |   4 +-
 src/util/virnetdevtap.h                            |   5 +-
 tests/lxcconf2xmldata/lxcconf2xml-simple.xml       |   1 +
 tests/lxcxml2xmltest.c                             |   2 +-
 tests/qemuxml2xmltest.c                            |   2 +-
 tests/vmx2xmldata/vmx2xml-case-insensitive-1.xml   |   1 +
 tests/vmx2xmldata/vmx2xml-case-insensitive-2.xml   |   1 +
 tests/vmx2xmldata/vmx2xml-esx-in-the-wild-1.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-esx-in-the-wild-2.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-esx-in-the-wild-3.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-esx-in-the-wild-4.xml    |   2 +
 tests/vmx2xmldata/vmx2xml-esx-in-the-wild-5.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-esx-in-the-wild-6.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-esx-in-the-wild-7.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-ethernet-bridged.xml     |   1 +
 tests/vmx2xmldata/vmx2xml-ethernet-custom.xml      |   1 +
 tests/vmx2xmldata/vmx2xml-ethernet-e1000.xml       |   1 +
 tests/vmx2xmldata/vmx2xml-ethernet-generated.xml   |   1 +
 tests/vmx2xmldata/vmx2xml-ethernet-other.xml       |   1 +
 tests/vmx2xmldata/vmx2xml-ethernet-static.xml      |   1 +
 tests/vmx2xmldata/vmx2xml-ethernet-vmxnet2.xml     |   1 +
 tests/vmx2xmldata/vmx2xml-ethernet-vpx.xml         |   1 +
 tests/vmx2xmldata/vmx2xml-fusion-in-the-wild-1.xml |   2 +
 tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-1.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-2.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-3.xml    |   2 +
 tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-4.xml    |   1 +
 tests/vmx2xmldata/vmx2xml-ws-in-the-wild-2.xml     |   1 +
 .../test-fullvirt-direct-kernel-boot.xml           |   1 +
 tests/xlconfigdata/test-fullvirt-multiusb.xml      |   1 +
 tests/xlconfigdata/test-new-disk.xml               |   1 +
 tests/xlconfigdata/test-spice.xml                  |   1 +
 46 files changed, 653 insertions(+), 31 deletions(-)

diff --git a/src/conf/domain_conf.c b/src/conf/domain_conf.c
index a0ecc94..9dc9a7e 100644
--- a/src/conf/domain_conf.c
+++ b/src/conf/domain_conf.c
@@ -8387,6 +8387,9 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
     char *macaddr = NULL;
     char *type = NULL;
     char *network = NULL;
+    char *dpdkport = NULL;
+    char *dpdkuse = NULL;
+    char *drivername = NULL;
     char *portgroup = NULL;
     char *bridge = NULL;
     char *dev = NULL;
@@ -8411,10 +8414,12 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
     char *addrtype = NULL;
     char *domain_name = NULL;
     char *vhostuser_mode = NULL;
+    char *vhostuser_reconnect = NULL;
     char *vhostuser_path = NULL;
     char *vhostuser_type = NULL;
     char *trustGuestRxFilters = NULL;
     char *vhost_path = NULL;
+    char *vhostuser_bridge = NULL;
     virNWFilterHashTablePtr filterparams = NULL;
     virDomainActualNetDefPtr actual = NULL;
     xmlNodePtr oldnode = ctxt->node;
@@ -8424,6 +8429,8 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
     virDomainNetIpDefPtr *ips = NULL;
     size_t nroutes = 0;
     virNetworkRouteDefPtr *routes = NULL;
+    xmlNodePtr virtualportcur;
+    char *virtPortInterfaceID = NULL;
 
     if (VIR_ALLOC(def) < 0)
         return NULL;
@@ -8469,18 +8476,34 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
                        def->type == VIR_DOMAIN_NET_TYPE_BRIDGE &&
                        xmlStrEqual(cur->name, BAD_CAST "source")) {
                 bridge = virXMLPropString(cur, "bridge");
+            } else if (!dpdkuse &&
+                       def->type == VIR_DOMAIN_NET_TYPE_BRIDGE &&
+                       xmlStrEqual(cur->name, BAD_CAST "dpdk")) {
+                dpdkuse = virXMLPropString(cur, "use");
+                dpdkport = virXMLPropString(cur, "port");
             } else if (!dev &&
                        (def->type == VIR_DOMAIN_NET_TYPE_ETHERNET ||
                         def->type == VIR_DOMAIN_NET_TYPE_DIRECT) &&
                        xmlStrEqual(cur->name, BAD_CAST "source")) {
                 dev  = virXMLPropString(cur, "dev");
                 mode = virXMLPropString(cur, "mode");
-            } else if (!vhostuser_path && !vhostuser_mode && !vhostuser_type
+            } else if (!vhostuser_path && !vhostuser_mode && !vhostuser_type && !vhostuser_reconnect
                        && def->type == VIR_DOMAIN_NET_TYPE_VHOSTUSER &&
                        xmlStrEqual(cur->name, BAD_CAST "source")) {
                 vhostuser_type = virXMLPropString(cur, "type");
                 vhostuser_path = virXMLPropString(cur, "path");
                 vhostuser_mode = virXMLPropString(cur, "mode");
+                vhostuser_reconnect = virXMLPropString(cur, "reconnect");
+            } else if (!vhostuser_bridge  && 
+                       def->type == VIR_DOMAIN_NET_TYPE_VHOSTUSER &&
+                       xmlStrEqual(cur->name, BAD_CAST "ovs")) {
+                vhostuser_bridge = virXMLPropString(cur, "bridge");
+            } else if (!bridge && def->type == VIR_DOMAIN_NET_TYPE_VHOSTUSER &&
+                       xmlStrEqual(cur->name, BAD_CAST "dvs")) {
+                bridge = virXMLPropString(cur, "bridge");
+            } else if (!ifname && def->type == VIR_DOMAIN_NET_TYPE_VHOSTUSER &&
+                       xmlStrEqual(cur->name, BAD_CAST "target")) {
+                ifname = virXMLPropString(cur, "dev");
             } else if (!def->virtPortProfile
                        && xmlStrEqual(cur->name, BAD_CAST "virtualport")) {
                 if (def->type == VIR_DOMAIN_NET_TYPE_NETWORK) {
@@ -8499,6 +8522,16 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
                                                        VIR_VPORT_XML_REQUIRE_TYPE))) {
                         goto error;
                     }
+                } else if (def->type == VIR_DOMAIN_NET_TYPE_VHOSTUSER ) {
+
+                    virtualportcur = cur->children;
+                    while (virtualportcur != NULL) {
+                        if (xmlStrEqual(virtualportcur->name, BAD_CAST "parameters")) {
+                            virtPortInterfaceID = virXMLPropString(virtualportcur, "interfaceid");
+                            break;
+                        }
+                        virtualportcur = virtualportcur->next;
+                }                     
                 } else {
                     virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
                                    _("<virtualport> element unsupported for"
@@ -8726,6 +8759,26 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
                              "type='vhostuser'/>"));
             goto error;
         }
+        if (vhostuser_reconnect == NULL) {
+            def->dvs_reconnect = 10;
+        }
+        else{
+            if(virStrToLong_ui(vhostuser_reconnect, NULL, 0, &def->dvs_reconnect)<0){
+
+                virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                 _("dvs reconnect attribute is invalid"));
+                vhostuser_reconnect = NULL;
+                goto error;
+            }
+        }
+            
+        def->dvsbrname = NULL;
+        if(bridge != NULL){
+            def->dvsbrname = bridge;
+            bridge = NULL;
+            def->dvsvirtPortInterfaceID = virtPortInterfaceID;
+            virtPortInterfaceID = NULL;
+        }
         break;
 
     case VIR_DOMAIN_NET_TYPE_ETHERNET:
@@ -8744,6 +8797,35 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
         }
         def->data.bridge.brname = bridge;
         bridge = NULL;
+        if (NULL == dpdkuse || memcmp("true", dpdkuse, 4) != 0)
+        {
+            def->data.bridge.dpdkuse = false;
+            def->data.bridge.dpdkport = 0;
+        }
+        else
+        {
+            def->data.bridge.dpdkuse = true;
+            if(virStrToLong_ui(dpdkport, NULL, 0, &def->data.bridge.dpdkport)<0)
+            {
+                virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                 _("dpdk 'port' attribute is invalid"));
+                dpdkuse  = NULL;
+                dpdkport = NULL;
+
+                goto error;
+            }
+        }
+
+        if (NULL != drivername && memcmp("vhost", drivername, 5) == 0) {
+            def->data.bridge.isvhostdirver = true;
+        }
+        else {
+            def->data.bridge.isvhostdirver = false;
+        }
+
+        drivername = NULL;
+        dpdkuse  = NULL;
+        dpdkport = NULL;
         break;
 
     case VIR_DOMAIN_NET_TYPE_CLIENT:
@@ -9111,6 +9193,9 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
     virDomainActualNetDefFree(actual);
     VIR_FREE(script);
     VIR_FREE(bridge);
+    VIR_FREE(dpdkuse);
+    VIR_FREE(dpdkport);
+    VIR_FREE(drivername); 
     VIR_FREE(model);
     VIR_FREE(backend);
     VIR_FREE(txmode);
@@ -9130,6 +9215,9 @@ virDomainNetDefParseXML(virDomainXMLOptionPtr xmlopt,
     VIR_FREE(ips);
     VIR_FREE(vhost_path);
     virNWFilterHashTableFree(filterparams);
+    VIR_FREE(vhostuser_bridge);
+    VIR_FREE(virtPortInterfaceID);
+    VIR_FREE(vhostuser_reconnect);
 
     return def;
 
@@ -19729,16 +19817,43 @@ virDomainNetDefFormat(virBufferPtr buf,
                 virBufferAddLit(buf, "<source type='unix'");
                 virBufferEscapeString(buf, " path='%s'",
                                       def->data.vhostuser->data.nix.path);
+                if(def->dvsbrname != NULL)
+                {
+                    virBufferAsprintf(buf, " reconnect='%u'",
+                                  def->dvs_reconnect);
+                }
                 virBufferAsprintf(buf, " mode='%s'",
                                   def->data.vhostuser->data.nix.listen ?
                                   "server"  : "client");
                 virBufferAddLit(buf, "/>\n");
             }
+            if(def->dvsbrname !=NULL)
+            {
+                virBufferAsprintf(buf, "<dvs bridge='%s'/>\n",
+                                def->dvsbrname);
+                virBufferAsprintf(buf, "<target dev='%s'/>\n",
+                                def->ifname);
+                virBufferAsprintf(buf, "<virtualport type='openvswitch'>\n");
+                virBufferAsprintf(buf, "    <parameters interfaceid='%s'/>\n",def->dvsvirtPortInterfaceID);
+                virBufferAsprintf(buf, "</virtualport>\n");
+            }
             break;
 
         case VIR_DOMAIN_NET_TYPE_BRIDGE:
             virBufferEscapeString(buf, "<source bridge='%s'/>\n",
                                   def->data.bridge.brname);
+            if (def->data.bridge.dpdkuse) {
+                virBufferAsprintf(buf, "<dpdk use='true' port='%u'/>\n",
+                                def->data.bridge.dpdkport);
+                /* 2014/11/22 add */
+                if(def->data.bridge.isvhostdirver == true ) {
+                    virBufferAsprintf(buf, "<driver name='vhost'/>\n");
+                }
+            }
+            else
+            {
+                virBufferAsprintf(buf, "<dpdk use='false' port='0'/>\n");
+            }
             break;
 
         case VIR_DOMAIN_NET_TYPE_SERVER:
diff --git a/src/conf/domain_conf.h b/src/conf/domain_conf.h
index e322adf..d653326 100644
--- a/src/conf/domain_conf.h
+++ b/src/conf/domain_conf.h
@@ -1008,6 +1008,10 @@ struct _virDomainNetDef {
         } network;
         struct {
             char *brname;
+            char *ipaddr;
+            bool dpdkuse;
+            unsigned int  dpdkport;
+            bool isvhostdirver;
         } bridge;
         struct {
             char *name;
@@ -1020,6 +1024,9 @@ struct _virDomainNetDef {
             virDomainHostdevDef def;
         } hostdev;
     } data;
+    char *dvsbrname;
+    char *dvsvirtPortInterfaceID;
+    unsigned int dvs_reconnect;
     /* virtPortProfile is used by network/bridge/direct/hostdev */
     virNetDevVPortProfilePtr virtPortProfile;
     struct {
diff --git a/src/lxc/lxc_driver.c b/src/lxc/lxc_driver.c
index 9a6e44e..6bddb46 100644
--- a/src/lxc/lxc_driver.c
+++ b/src/lxc/lxc_driver.c
@@ -4698,7 +4698,7 @@ lxcDomainDetachDeviceNetLive(virDomainObjPtr vm,
     if (vport && vport->virtPortType == VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH)
         ignore_value(virNetDevOpenvswitchRemovePort(
                         virDomainNetGetActualBridgeName(detach),
-                        detach->ifname));
+                        detach->ifname, detach->data.bridge.dpdkuse));
     ret = 0;
  cleanup:
     if (!ret) {
diff --git a/src/lxc/lxc_process.c b/src/lxc/lxc_process.c
index 2eaad7d..99cc9b4 100644
--- a/src/lxc/lxc_process.c
+++ b/src/lxc/lxc_process.c
@@ -199,7 +199,7 @@ static void virLXCProcessCleanup(virLXCDriverPtr driver,
                 vport->virtPortType == VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH)
                 ignore_value(virNetDevOpenvswitchRemovePort(
                                 virDomainNetGetActualBridgeName(iface),
-                                iface->ifname));
+                                iface->ifname,iface->data.bridge.dpdkuse));
             ignore_value(virNetDevVethDelete(iface->ifname));
         }
         networkReleaseActualDevice(vm->def, iface);
@@ -262,7 +262,7 @@ char *virLXCProcessSetupInterfaceBridged(virDomainDefPtr vm,
 
     if (vport && vport->virtPortType == VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH) {
         if (virNetDevOpenvswitchAddPort(brname, parentVeth, &net->mac,
-                                        vm->uuid, vport, virDomainNetGetActualVlan(net)) < 0)
+                                        vm->uuid, vport, virDomainNetGetActualVlan(net), false,0,false) < 0)
             goto cleanup;
     } else {
         if (virNetDevBridgeAddPort(brname, parentVeth) < 0)
@@ -457,7 +457,7 @@ static int virLXCProcessSetupInterfaces(virConnectPtr conn,
             if (vport && vport->virtPortType == VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH)
                 ignore_value(virNetDevOpenvswitchRemovePort(
                                 virDomainNetGetActualBridgeName(iface),
-                                iface->ifname));
+                                iface->ifname,iface->data.bridge.dpdkuse));
             networkReleaseActualDevice(def, iface);
         }
     }
diff --git a/src/network/bridge_driver.c b/src/network/bridge_driver.c
index 666078c..360c72b 100644
--- a/src/network/bridge_driver.c
+++ b/src/network/bridge_driver.c
@@ -2075,7 +2075,8 @@ networkStartNetworkVirtual(virNetworkDriverStatePtr driver,
                                            NULL, NULL, &tapfd, 1, NULL, NULL,
                                            VIR_NETDEV_TAP_CREATE_USE_MAC_FOR_BRIDGE |
                                            VIR_NETDEV_TAP_CREATE_IFUP |
-                                           VIR_NETDEV_TAP_CREATE_PERSIST) < 0) {
+                                           VIR_NETDEV_TAP_CREATE_PERSIST,
+                                           false,0,false) < 0) {
             VIR_FREE(macTapIfName);
             goto err0;
         }
diff --git a/src/qemu/qemu_command.c b/src/qemu/qemu_command.c
index ece6081..928d316 100644
--- a/src/qemu/qemu_command.c
+++ b/src/qemu/qemu_command.c
@@ -386,7 +386,7 @@ qemuNetworkIfaceConnect(virDomainDefPtr def,
                                            def->uuid, tunpath, tapfd, *tapfdSize,
                                            virDomainNetGetActualVirtPortProfile(net),
                                            virDomainNetGetActualVlan(net),
-                                           tap_create_flags) < 0) {
+                                           tap_create_flags,net->data.bridge.dpdkuse,net->data.bridge.dpdkport,net->data.bridge.isvhostdirver) < 0) {
             virDomainAuditNetDevice(def, net, tunpath, false);
             goto cleanup;
         }
@@ -5280,6 +5280,17 @@ qemuBuildNicDevStr(virDomainDefPtr def,
     if (bootindex && virQEMUCapsGet(qemuCaps, QEMU_CAPS_BOOTINDEX))
         virBufferAsprintf(&buf, ",bootindex=%d", bootindex);
 
+    if ((net->type == VIR_DOMAIN_NET_TYPE_BRIDGE) &&
+        (net->data.bridge.dpdkuse == true) &&
+        (net->data.bridge.isvhostdirver == true)) {
+        virBufferAsprintf(&buf, ",csum=off,gso=off,guest_tso4=off,guest_tso6=off,guest_ecn=off,host_tso4=off,host_tso6=off,host_ecn=off,host_ufo=off");
+    }
+
+    if((net->type == VIR_DOMAIN_NET_TYPE_VHOSTUSER)&&(net->dvsbrname != NULL))
+    {
+        virBufferAsprintf(&buf, ",csum=off,gso=off,guest_tso4=off,guest_tso6=off,guest_ecn=off,host_tso4=off,host_tso6=off,host_ecn=off,host_ufo=off");
+    }    
+
     if (virBufferCheckError(&buf) < 0)
         goto error;
 
@@ -5307,6 +5318,11 @@ qemuBuildHostNetStr(virDomainNetDefPtr net,
     virQEMUDriverConfigPtr cfg = virQEMUDriverGetConfig(driver);
     size_t i;
 
+    if(netType == VIR_DOMAIN_NET_TYPE_VHOSTUSER)
+    {
+        net->script = NULL;
+    }    
+
     if (net->script && netType != VIR_DOMAIN_NET_TYPE_ETHERNET) {
         virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
                        _("scripts are not supported on interfaces of type %s"),
@@ -5379,7 +5395,12 @@ qemuBuildHostNetStr(virDomainNetDefPtr net,
                          net->data.socket.port);
        type_sep = ',';
        break;
-
+    case VIR_DOMAIN_NET_TYPE_VHOSTUSER:
+    {
+        virBufferAsprintf(&buf, "vhost-user%c", type_sep);
+        virBufferAsprintf(&buf, "ifname=%s,vhostforce=on,reconnect=%u", net->ifname,net->dvs_reconnect);
+        break;
+    }    
     case VIR_DOMAIN_NET_TYPE_USER:
     default:
         virBufferAddLit(&buf, "user");
@@ -5409,7 +5430,15 @@ qemuBuildHostNetStr(virDomainNetDefPtr net,
                     virBufferAdd(&buf, vhostfd[i], -1);
                 }
             }
+        
+         if ((net->type == VIR_DOMAIN_NET_TYPE_BRIDGE) &&        
+            (net->data.bridge.dpdkuse == true) &&        
+            (net->data.bridge.isvhostdirver == true)) 
+            {    
+            virBufferAsprintf(&buf, ",vhostforce=on"); 
+            }
         }
+ 
         if (net->tune.sndbuf_specified)
             virBufferAsprintf(&buf, ",sndbuf=%lu", net->tune.sndbuf);
     }
@@ -8361,6 +8390,10 @@ qemuBuildVhostuserCommandLine(virCommandPtr cmd,
         virBufferAsprintf(&chardev_buf, "socket,id=char%s,path=%s%s",
                           net->info.alias, net->data.vhostuser->data.nix.path,
                           net->data.vhostuser->data.nix.listen ? ",server" : "");
+        if(net->dvsbrname != NULL)
+        {
+            virBufferAsprintf(&chardev_buf, ",reconnect=%u",net->dvs_reconnect);
+        }
         break;
 
     case VIR_DOMAIN_CHR_TYPE_NULL:
@@ -8398,6 +8431,11 @@ qemuBuildVhostuserCommandLine(virCommandPtr cmd,
     virCommandAddArg(cmd, "-chardev");
     virCommandAddArgBuffer(cmd, &chardev_buf);
 
+    if(net->dvsbrname != NULL)
+    {
+        virBufferAsprintf(&netdev_buf, ",ifname=%s,vhostforce",net->ifname);
+    }
+
     virCommandAddArg(cmd, "-netdev");
     virCommandAddArgBuffer(cmd, &netdev_buf);
 
@@ -8446,13 +8484,52 @@ qemuBuildInterfaceCommandLine(virCommandPtr cmd,
     virQEMUDriverConfigPtr cfg = NULL;
     virNetDevBandwidthPtr actualBandwidth;
     size_t i;
+    virCommandPtr dvsportcmd = NULL;
+    char mac[VIR_MAC_STRING_BUFLEN];
 
 
     if (!bootindex)
         bootindex = net->info.bootIndex;
 
     if (actualType == VIR_DOMAIN_NET_TYPE_VHOSTUSER)
+    {
+
+     if(net->dvsbrname != NULL)
+     {
+            ret = qemuBuildVhostuserCommandLine(cmd, def, net, qemuCaps, bootindex);
+            if (ret < 0) {
+                return ret;
+            }
+
+            dvsportcmd = virCommandNew("iovs-vsctl");
+            virCommandAddArgList(dvsportcmd, "--no-wait", "--", "--may-exist", "add-port",
+                               net->dvsbrname, net->ifname, NULL);
+
+            virCommandAddArgList(dvsportcmd, 
+                            "--", "set", "Interface", net->ifname, "type=dpdkvhost", NULL);
+
+            virCommandAddArgFormat(dvsportcmd, 
+                        "external-ids:iface-id=%s",net->dvsvirtPortInterfaceID);
+
+            virCommandAddArgFormat(dvsportcmd, 
+                        "external-ids:attached-mac=%s",virMacAddrFormat(&net->mac, mac));
+
+            virCommandAddArgFormat(dvsportcmd, 
+                        "external-ids:iface-status=active");
+
+            if (virCommandRun(dvsportcmd, NULL) < 0) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR,
+                       _("Unable to add port %s to OVS bridge %s"),
+                       net->ifname, net->dvsbrname);
+                    return -1;
+            }
+            return 0;
+     }
+     else
+     {
         return qemuBuildVhostuserCommandLine(cmd, def, net, qemuCaps, bootindex);
+     }
+    }
 
     if (actualType == VIR_DOMAIN_NET_TYPE_HOSTDEV) {
         /* NET_TYPE_HOSTDEV devices are really hostdev devices, so
diff --git a/src/qemu/qemu_driver.c b/src/qemu/qemu_driver.c
index 7e0a959..35aaca8 100644
--- a/src/qemu/qemu_driver.c
+++ b/src/qemu/qemu_driver.c
@@ -101,6 +101,7 @@
 #include "virnuma.h"
 #include "dirname.h"
 #include "network/bridge_driver.h"
+#include "c-ctype.h"
 
 #define VIR_FROM_THIS VIR_FROM_QEMU
 
@@ -175,6 +176,8 @@ static int qemuOpenFileAs(uid_t fallback_uid, gid_t fallback_gid,
 static int qemuGetDHCPInterfaces(virDomainPtr dom,
                                  virDomainObjPtr vm,
                                  virDomainInterfacePtr **ifaces);
+int DvsInterfaceStats(const char *path,
+                          struct _virDomainInterfaceStats *stats);
 
 virQEMUDriverPtr qemu_driver = NULL;
 
@@ -11182,6 +11185,226 @@ qemuDomainBlockStatsFlags(virDomainPtr dom,
     return ret;
 }
 
+int
+DvsInterfaceStats(const char *path,
+                          struct _virDomainInterfaceStats *stats)
+{
+    char  acData[100];
+    int ret = 0;
+    FILE *fp = NULL;
+    char line[256];
+
+    memset(stats,0,sizeof(struct _virDomainInterfaceStats));
+
+    memset(acData,0,100);
+    sprintf(acData,"iovs-vsctl list interface %s >/tmp/dvsportstats",path);
+    /*VIR_INFO("system acData: %s\r\n",  acData);*/
+    ret = system(acData);
+    if(ret < 0)
+    {
+        VIR_ERROR("system call  iovs-vsctl list interface %s failed\r\n",  path);
+        return -1;
+    }
+
+    fp = fopen("/tmp/dvsportstats", "r");
+    if (!fp) {
+        virReportSystemError(errno, "%s",
+                             _("Could not open /tmp/dvsportstats"));
+        return -1;
+    }
+
+    while (fgets(line, sizeof(line), fp)) {
+        long long rx_bytes = 0;
+        long long rx_packets = 0;
+        long long rx_errs = 0;
+        long long rx_drop = 0;
+        long long tx_bytes = 0;
+        long long tx_packets = 0;
+        long long tx_errs = 0;
+        long long tx_drop = 0;
+        char *buf = NULL;
+
+
+        /*VIR_INFO("line:%s",line);*/
+
+        /*statistics          : {rx_bytes=31159, rx_dropped=0, rx_errors=0, rx_packets=322, tx_bytes=31159, tx_dropped=0, tx_errors=0, tx_packets=322} */
+        if (strstr(line, "statistics")) {
+            char *p;
+
+            /*VIR_INFO("iovs-vsctl list interface %s:%s", path, line);*/
+            buf = strstr(line, "rx_bytes");
+            if(buf != NULL)
+            {
+                buf += 9;
+                while (c_isspace(*buf))
+                    buf++;
+                
+                if (!buf[0]) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                   _("parsing statistics error"));
+                    goto cleanup;
+                }
+                /*VIR_INFO("buf:%s",buf);*/
+                
+                ret = virStrToLong_ll(buf, &p, 10, &rx_bytes);
+                /*VIR_INFO("major:%lld",rx_bytes);*/ 
+            }
+
+            
+            buf = strstr(line, "rx_dropped");
+            if(buf != NULL)
+            {
+                buf += 11;
+                while (c_isspace(*buf))
+                    buf++;
+                
+                if (!buf[0]) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                   _("parsing statistics error"));
+                    goto cleanup;
+                }
+                /*VIR_INFO("buf:%s",buf);*/
+                
+                ret = virStrToLong_ll(buf, &p, 10, &rx_drop);
+                /*VIR_INFO("major:%lld",rx_drop);*/
+            }
+            
+            buf = NULL;
+            buf = strstr(line, "rx_errors");
+            if(buf != NULL)
+            {
+                buf += 10;
+                while (c_isspace(*buf))
+                    buf++;
+                
+                if (!buf[0]) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                   _("parsing statistics error"));
+                    goto cleanup;
+                }
+                /*VIR_INFO("buf:%s",buf);*/
+                
+                ret = virStrToLong_ll(buf, &p, 10, &rx_errs);
+                /*VIR_INFO("major:%lld",rx_errs);*/
+            }
+            
+            buf = NULL;
+            buf = strstr(line, "rx_packets");
+            if(buf != NULL)
+            {
+                buf += 11;
+                while (c_isspace(*buf))
+                    buf++;
+                
+                if (!buf[0]) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                   _("parsing statistics error"));
+                    goto cleanup;
+                }
+                /*VIR_INFO("buf:%s",buf);*/
+                
+                ret = virStrToLong_ll(buf, &p, 10, &rx_packets);
+                /*VIR_INFO("major:%lld",rx_packets);*/
+            }
+            
+            buf = NULL;
+            buf = strstr(line, "tx_bytes");
+            if(buf != NULL)
+            {
+                buf += 9;
+                while (*buf && c_isspace(*buf))
+                    buf++;
+                
+                if (!buf[0]) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                   _("parsing statistics error"));
+                    goto cleanup;
+                }
+                /*VIR_INFO("buf:%s",buf);*/
+                
+                ret = virStrToLong_ll(buf, &p, 10, &tx_bytes);
+                /*VIR_INFO("major:%lld",tx_bytes);*/ 
+            }
+            
+            buf = NULL;
+            buf = strstr(line, "tx_dropped");
+            if(buf != NULL)
+            {
+                buf += 11;
+                while (*buf && c_isspace(*buf))
+                    buf++;
+                
+                if (!buf[0]) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                   _("parsing statistics error"));
+                    goto cleanup;
+                }
+                /*VIR_INFO("buf:%s",buf);*/
+                
+                ret = virStrToLong_ll(buf, &p, 10, &tx_drop);
+                /*VIR_INFO("major:%lld",tx_drop);*/
+
+            }
+            
+            buf = NULL;
+            buf = strstr(line, "tx_errors");
+            if(buf != NULL)
+            {
+                buf += 10;
+                while (c_isspace(*buf))
+                    buf++;
+                
+                if (!buf[0]) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                   _("parsing statistics error"));
+                    goto cleanup;
+                }
+                /*VIR_INFO("buf:%s",buf);*/
+                
+                ret = virStrToLong_ll(buf, &p, 10, &tx_errs);
+                /*VIR_INFO("major:%lld",tx_errs);*/
+                
+            }
+            
+            buf = NULL;
+            buf = strstr(line, "tx_packets");
+            if(buf != NULL)
+            {
+                buf += 11;
+                while (c_isspace(*buf))
+                    buf++;
+                
+                if (!buf[0]) {
+                    virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
+                                   _("parsing statistics error"));
+                    goto cleanup;
+                }
+                /*VIR_INFO("buf:%s",buf);*/
+                
+                ret = virStrToLong_ll(buf, &p, 10, &tx_packets);
+                /*VIR_INFO("major:%lld",tx_packets);*/
+            }
+            stats->rx_bytes = rx_bytes;
+            stats->rx_packets = rx_packets;
+            stats->rx_errs = rx_errs;
+            stats->rx_drop = rx_drop;
+            stats->tx_bytes = tx_bytes;
+            stats->tx_packets = tx_packets;
+            stats->tx_errs = tx_errs;
+            stats->tx_drop = tx_drop;
+
+            break;
+        }
+
+    }
+    
+cleanup:    
+    VIR_FORCE_FCLOSE(fp);
+    return ret;
+    
+}
+
+
 static int
 qemuDomainInterfaceStats(virDomainPtr dom,
                          const char *path,
@@ -11190,6 +11413,7 @@ qemuDomainInterfaceStats(virDomainPtr dom,
     virDomainObjPtr vm;
     size_t i;
     int ret = -1;
+    bool dpdkuse = false;
 
     if (!(vm = qemuDomObjFromDomain(dom)))
         goto cleanup;
@@ -11207,13 +11431,30 @@ qemuDomainInterfaceStats(virDomainPtr dom,
     for (i = 0; i < vm->def->nnets; i++) {
         if (vm->def->nets[i]->ifname &&
             STREQ(vm->def->nets[i]->ifname, path)) {
+            if(vm->def->nets[i]->data.bridge.dpdkuse == true)
+            {
+                dpdkuse = true;
+            }
+
+            if((vm->def->nets[i]->type == VIR_DOMAIN_NET_TYPE_VHOSTUSER)
+                &&(vm->def->nets[i]->dvsbrname != NULL)){
+                /*VIR_INFO("type:%d, dvsbrname:%s",vm->def->nets[i]->type,vm->def->nets[i]->dvsbrname);*/
+                dpdkuse = true;
+            }
             ret = 0;
             break;
         }
     }
 
-    if (ret == 0)
+    if (ret == 0){
+        if(!dpdkuse){ 
         ret = virNetInterfaceStats(path, stats);
+        }
+        else
+        {
+            ret = DvsInterfaceStats(path, stats);
+        }
+    }
     else
         virReportError(VIR_ERR_INVALID_ARG,
                        _("invalid path, '%s' is not a known interface"), path);
diff --git a/src/qemu/qemu_hotplug.c b/src/qemu/qemu_hotplug.c
index 003b614..96f3c63 100644
--- a/src/qemu/qemu_hotplug.c
+++ b/src/qemu/qemu_hotplug.c
@@ -879,6 +879,7 @@ int qemuDomainAttachNetDevice(virConnectPtr conn,
     int vlan;
     bool releaseaddr = false;
     bool iface_connected = false;
+    bool vhostuserport = false;
     int actualType;
     virNetDevBandwidthPtr actualBandwidth;
     virQEMUDriverConfigPtr cfg = virQEMUDriverGetConfig(driver);
@@ -974,6 +975,35 @@ int qemuDomainAttachNetDevice(virConnectPtr conn,
         *vhostfd = -1;
         if (qemuOpenVhostNet(vm->def, net, priv->qemuCaps, vhostfd, &vhostfdSize) < 0)
             goto cleanup;
+    }else if(actualType == VIR_DOMAIN_NET_TYPE_VHOSTUSER) {
+        virCommandPtr dvsportcmd = NULL;
+        char mac[VIR_MAC_STRING_BUFLEN];
+        if(net->dvsbrname != NULL)
+        {
+            dvsportcmd = virCommandNew("iovs-vsctl");
+            virCommandAddArgList(dvsportcmd, "--no-wait", "--",  "add-port",
+                           net->dvsbrname, net->ifname, NULL);
+
+            virCommandAddArgList(dvsportcmd, 
+                        "--", "set", "Interface", net->ifname, "type=dpdkvhost", NULL);
+
+            virCommandAddArgFormat(dvsportcmd, 
+                    "external-ids:iface-id=%s",net->dvsvirtPortInterfaceID);
+
+            virCommandAddArgFormat(dvsportcmd, 
+                    "external-ids:attached-mac=%s",virMacAddrFormat(&net->mac, mac));
+
+            virCommandAddArgFormat(dvsportcmd, 
+                    "external-ids:iface-status=active");
+
+            if (virCommandRun(dvsportcmd, NULL) < 0) {
+                virReportError(VIR_ERR_INTERNAL_ERROR,
+                   _("Unable to add port %s to OVS bridge %s"),
+                   net->ifname, net->dvsbrname);
+                goto cleanup;
+            }
+          vhostuserport = true;
+        }
     }
 
     /* Set device online immediately */
@@ -1064,6 +1094,14 @@ int qemuDomainAttachNetDevice(virConnectPtr conn,
             goto cleanup;
     }
 
+    if(actualType == VIR_DOMAIN_NET_TYPE_VHOSTUSER)
+    {
+        char a[100];
+        snprintf(a,100,",chardev=char%s",net->info.alias);
+        strncat(netstr,a,100);
+    }
+    
+ 
     qemuDomainObjEnterMonitor(driver, vm);
     if (virQEMUCapsGet(priv->qemuCaps, QEMU_CAPS_NETDEV) &&
         virQEMUCapsGet(priv->qemuCaps, QEMU_CAPS_DEVICE)) {
@@ -1176,11 +1214,25 @@ int qemuDomainAttachNetDevice(virConnectPtr conn,
                 } else if (vport->virtPortType == VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH) {
                     ignore_value(virNetDevOpenvswitchRemovePort(
                                      virDomainNetGetActualBridgeName(net),
-                                     net->ifname));
+                                     net->ifname, net->data.bridge.dpdkuse));
                 }
             }
         }
 
+        if(vhostuserport && (virDomainNetGetActualType(net) == VIR_DOMAIN_NET_TYPE_VHOSTUSER)){
+          virCommandPtr dvsportcmd = NULL;
+        if(net->dvsbrname != NULL)
+            {
+                dvsportcmd = virCommandNew("iovs-vsctl");
+
+                virCommandAddArgList(dvsportcmd, "--no-wait", "--", "--if-exists", "del-port", net->ifname, NULL);
+                if (virCommandRun(dvsportcmd, NULL) < 0) {
+                        virReportError(VIR_ERR_INTERNAL_ERROR,
+                           _("Unable to delete port %s to OVS bridge %s"),
+                           net->ifname, net->dvsbrname);
+                }
+            }
+        }
         virDomainNetRemoveHostdev(vm->def, net);
 
         networkReleaseActualDevice(vm->def, net);
@@ -3194,6 +3246,21 @@ qemuDomainRemoveNetDevice(virQEMUDriverPtr driver,
                          cfg->stateDir));
     }
 
+    if(virDomainNetGetActualType(net) == VIR_DOMAIN_NET_TYPE_VHOSTUSER){
+        if(net->dvsbrname != NULL)
+        {
+            virCommandPtr cmd = NULL;
+            cmd = virCommandNew("iovs-vsctl");
+            virCommandAddArgList(cmd, "--no-wait", "--", "--if-exists", "del-port", net->ifname, NULL);
+
+            if (virCommandRun(cmd, NULL) < 0) {
+            virReportError(VIR_ERR_INTERNAL_ERROR,
+                           _("Unable to delete port %s from OVS"), net->ifname);
+            goto cleanup;
+            }
+        }
+    }
+
     vport = virDomainNetGetActualVirtPortProfile(net);
     if (vport) {
         if (vport->virtPortType == VIR_NETDEV_VPORT_PROFILE_MIDONET) {
@@ -3201,7 +3268,7 @@ qemuDomainRemoveNetDevice(virQEMUDriverPtr driver,
         } else if (vport->virtPortType == VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH) {
             ignore_value(virNetDevOpenvswitchRemovePort(
                              virDomainNetGetActualBridgeName(net),
-                             net->ifname));
+                             net->ifname,net->data.bridge.dpdkuse));
         }
     }
 
diff --git a/src/qemu/qemu_migration.c b/src/qemu/qemu_migration.c
index 8074156..f2b25b7 100644
--- a/src/qemu/qemu_migration.c
+++ b/src/qemu/qemu_migration.c
@@ -392,7 +392,7 @@ qemuMigrationCookieNetworkAlloc(virQEMUDriverPtr driver ATTRIBUTE_UNUSED,
                break;
             case VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH:
                 if (virNetDevOpenvswitchGetMigrateData(&mig->net[i].portdata,
-                                                       netptr->ifname) != 0) {
+                                                       netptr->ifname, netptr->data.bridge.dpdkuse) != 0) {
                         virReportError(VIR_ERR_INTERNAL_ERROR,
                                        _("Unable to run command to get OVS port data for "
                                          "interface %s"), netptr->ifname);
@@ -2831,7 +2831,7 @@ qemuDomainMigrateOPDRelocate(virQEMUDriverPtr driver ATTRIBUTE_UNUSED,
            break;
         case VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH:
             if (virNetDevOpenvswitchSetMigrateData(cookie->network->net[i].portdata,
-                                                   netptr->ifname) != 0) {
+                                                   netptr->ifname,netptr->data.bridge.dpdkuse) != 0) {
                 virReportError(VIR_ERR_INTERNAL_ERROR,
                                _("Unable to run command to set OVS port data for "
                                  "interface %s"), netptr->ifname);
diff --git a/src/qemu/qemu_process.c b/src/qemu/qemu_process.c
index 1d06b6d..b13424c 100644
--- a/src/qemu/qemu_process.c
+++ b/src/qemu/qemu_process.c
@@ -5371,6 +5371,22 @@ void qemuProcessStop(virQEMUDriverPtr driver,
 #endif
             break;
         }
+        if(virDomainNetGetActualType(net) == VIR_DOMAIN_NET_TYPE_VHOSTUSER)
+        {
+            virCommandPtr dvsportcmd = NULL;
+            if(net->dvsbrname != NULL)
+            {
+                dvsportcmd = virCommandNew("iovs-vsctl");
+
+                virCommandAddArgList(dvsportcmd, "--no-wait", "--", "--if-exists", "del-port", net->ifname, NULL);
+                if (virCommandRun(dvsportcmd, NULL) < 0) {
+                        virReportError(VIR_ERR_INTERNAL_ERROR,
+                           _("Unable to delete port %s to OVS bridge %s"),
+                           net->ifname, net->dvsbrname);
+                }
+            }
+            
+        }
         /* release the physical device (or any other resources used by
          * this interface in the network driver
          */
@@ -5380,7 +5396,7 @@ void qemuProcessStop(virQEMUDriverPtr driver,
             } else if (vport->virtPortType == VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH) {
                 ignore_value(virNetDevOpenvswitchRemovePort(
                                  virDomainNetGetActualBridgeName(net),
-                                 net->ifname));
+                                 net->ifname, net->data.bridge.dpdkuse));
             }
         }
 
diff --git a/src/security/virt-aa-helper.c b/src/security/virt-aa-helper.c
index 35423b5..5f2d74c 100644
--- a/src/security/virt-aa-helper.c
+++ b/src/security/virt-aa-helper.c
@@ -1101,6 +1101,18 @@ get_files(vahControl * ctl)
         }
     }
 
+     for (i = 0; i < ctl->def->nnets; i++) {
+        if (ctl->def->nets[i] &&
+                ctl->def->nets[i]->type == VIR_DOMAIN_NET_TYPE_VHOSTUSER &&
+                ctl->def->nets[i]->data.vhostuser) {
+            virDomainChrSourceDefPtr vhu = ctl->def->nets[i]->data.vhostuser;
+
+            if (vah_add_file_chardev(&buf, vhu->data.nix.path, "rw",
+                       vhu->type) != 0)
+                goto cleanup;
+        }
+    }
+ 
     if (ctl->def->virtType == VIR_DOMAIN_VIRT_KVM) {
         for (i = 0; i < ctl->def->nnets; i++) {
             virDomainNetDefPtr net = ctl->def->nets[i];
diff --git a/src/uml/uml_conf.c b/src/uml/uml_conf.c
index 90deb2a..ef99322 100644
--- a/src/uml/uml_conf.c
+++ b/src/uml/uml_conf.c
@@ -127,7 +127,7 @@ umlConnectTapDevice(virDomainDefPtr vm,
                                        virDomainNetGetActualVirtPortProfile(net),
                                        virDomainNetGetActualVlan(net),
                                        VIR_NETDEV_TAP_CREATE_IFUP |
-                                       VIR_NETDEV_TAP_CREATE_PERSIST) < 0) {
+                                       VIR_NETDEV_TAP_CREATE_PERSIST,false,0,false) < 0) {
         if (template_ifname)
             VIR_FREE(net->ifname);
         goto error;
diff --git a/src/util/virnetdevopenvswitch.c b/src/util/virnetdevopenvswitch.c
index 6780fb5..e20f222 100644
--- a/src/util/virnetdevopenvswitch.c
+++ b/src/util/virnetdevopenvswitch.c
@@ -36,6 +36,8 @@
 
 VIR_LOG_INIT("util.netdevopenvswitch");
 
+#define IOVSVSCTL   "iovs-vsctl"
+
 /**
  * virNetDevOpenvswitchAddPort:
  * @brname: the bridge name
@@ -52,7 +54,8 @@ int virNetDevOpenvswitchAddPort(const char *brname, const char *ifname,
                                    const virMacAddr *macaddr,
                                    const unsigned char *vmuuid,
                                    virNetDevVPortProfilePtr ovsport,
-                                   virNetDevVlanPtr virtVlan)
+                                   virNetDevVlanPtr virtVlan,
+                                   bool isDpdkOvs,unsigned int DpdkPort,bool isvhostdirver)
 {
     int ret = -1;
     size_t i = 0;
@@ -84,12 +87,19 @@ int virNetDevOpenvswitchAddPort(const char *brname, const char *ifname,
                         ovsport->profileID) < 0)
             goto cleanup;
     }
-
+    if(!isDpdkOvs)
+    {
     cmd = virCommandNew(OVSVSCTL);
 
     virCommandAddArgList(cmd, "--timeout=5", "--", "--if-exists", "del-port",
                          ifname, "--", "add-port", brname, ifname, NULL);
-
+    }
+    else
+    {
+        cmd = virCommandNew(IOVSVSCTL);
+        virCommandAddArgList(cmd, "--no-wait", "--", "--may-exist", "add-port",
+                               brname, ifname, NULL);
+    }
     if (virtVlan && virtVlan->nTags > 0) {
 
         switch (virtVlan->nativeMode) {
@@ -130,6 +140,22 @@ int virNetDevOpenvswitchAddPort(const char *brname, const char *ifname,
         }
     }
 
+    if (isDpdkOvs) {
+        if (isvhostdirver) {
+            virCommandAddArgList(cmd, 
+                            "--", "set", "Interface", ifname, "type=dpdkvhost", NULL);
+            /*virCommandAddArgFormat(cmd, 
+ *                         "ofport_request=%u",DpdkPort);*/
+        }else{
+            virCommandAddArgList(cmd, 
+                        "--", "set", "Interface", ifname, "type=dpdkclient", NULL);
+            virCommandAddArgFormat(cmd, 
+                        "ofport_request=%u",DpdkPort);
+            virCommandAddArgFormat(cmd, 
+                        "option:port=%u",DpdkPort);
+        }
+    }
+
     if (ovsport->profileID[0] == '\0') {
         virCommandAddArgList(cmd,
                         "--", "set", "Interface", ifname, attachedmac_ex_id,
@@ -175,14 +201,21 @@ int virNetDevOpenvswitchAddPort(const char *brname, const char *ifname,
  *
  * Returns 0 in case of success or -1 in case of failure.
  */
-int virNetDevOpenvswitchRemovePort(const char *brname ATTRIBUTE_UNUSED, const char *ifname)
+int virNetDevOpenvswitchRemovePort(const char *brname ATTRIBUTE_UNUSED, const char *ifname, bool isDpdkOvs)
 {
     int ret = -1;
     virCommandPtr cmd = NULL;
 
+    if(!isDpdkOvs)
+    {
     cmd = virCommandNew(OVSVSCTL);
     virCommandAddArgList(cmd, "--timeout=5", "--", "--if-exists", "del-port", ifname, NULL);
-
+    }
+    else
+    {
+        cmd = virCommandNew(IOVSVSCTL);
+        virCommandAddArgList(cmd, "--no-wait", "--", "--if-exists", "del-port", ifname, NULL);
+    }
     if (virCommandRun(cmd, NULL) < 0) {
         virReportError(VIR_ERR_INTERNAL_ERROR,
                        _("Unable to delete port %s from OVS"), ifname);
@@ -204,13 +237,21 @@ int virNetDevOpenvswitchRemovePort(const char *brname ATTRIBUTE_UNUSED, const ch
  *
  * Returns 0 in case of success or -1 in case of failure
  */
-int virNetDevOpenvswitchGetMigrateData(char **migrate, const char *ifname)
+int virNetDevOpenvswitchGetMigrateData(char **migrate, const char *ifname, bool isDpdkOvs)
 {
     virCommandPtr cmd = NULL;
     int ret = -1;
 
+    if(!isDpdkOvs)
+    {
     cmd = virCommandNewArgList(OVSVSCTL, "--timeout=5", "--if-exists", "get", "Interface",
                                ifname, "external_ids:PortData", NULL);
+    }
+    else
+    {
+        cmd = virCommandNewArgList(IOVSVSCTL, "--timeout=5","--if-exists","get", "Interface",
+                               ifname, "external_ids:PortData", NULL);
+    }
 
     virCommandSetOutputBuffer(cmd, migrate);
 
@@ -239,7 +280,7 @@ int virNetDevOpenvswitchGetMigrateData(char **migrate, const char *ifname)
  *
  * Returns 0 in case of success or -1 in case of failure
  */
-int virNetDevOpenvswitchSetMigrateData(char *migrate, const char *ifname)
+int virNetDevOpenvswitchSetMigrateData(char *migrate, const char *ifname, bool isDpdkOvs)
 {
     virCommandPtr cmd = NULL;
     int ret = -1;
@@ -248,9 +289,17 @@ int virNetDevOpenvswitchSetMigrateData(char *migrate, const char *ifname)
         VIR_DEBUG("No OVS port data for interface %s", ifname);
         return 0;
     }
+    if(!isDpdkOvs)
+    {
 
     cmd = virCommandNewArgList(OVSVSCTL, "--timeout=5", "set",
                                "Interface", ifname, NULL);
+    }
+     else
+    {
+        cmd = virCommandNewArgList(IOVSVSCTL, "--timeout=5", "set",
+                               "Interface", ifname, NULL);
+    }
     virCommandAddArgFormat(cmd, "external_ids:PortData=%s", migrate);
 
     /* Run the command */
diff --git a/src/util/virnetdevopenvswitch.h b/src/util/virnetdevopenvswitch.h
index 131be73..a52492e 100644
--- a/src/util/virnetdevopenvswitch.h
+++ b/src/util/virnetdevopenvswitch.h
@@ -35,17 +35,20 @@ int virNetDevOpenvswitchAddPort(const char *brname,
                                 const virMacAddr *macaddr,
                                 const unsigned char *vmuuid,
                                 virNetDevVPortProfilePtr ovsport,
-                                virNetDevVlanPtr virtVlan)
+                                virNetDevVlanPtr virtVlan,
+                                bool isDpdkOvs,
+                                unsigned int DpdkPort,
+                                bool isvhostdirver)
     ATTRIBUTE_NONNULL(1) ATTRIBUTE_NONNULL(2) ATTRIBUTE_NONNULL(3)
     ATTRIBUTE_RETURN_CHECK;
 
-int virNetDevOpenvswitchRemovePort(const char *brname, const char *ifname)
+int virNetDevOpenvswitchRemovePort(const char *brname, const char *ifname,bool isDpdkOvs)
     ATTRIBUTE_NONNULL(2) ATTRIBUTE_RETURN_CHECK;
 
-int virNetDevOpenvswitchGetMigrateData(char **migrate, const char *ifname)
+int virNetDevOpenvswitchGetMigrateData(char **migrate, const char *ifname,bool isDpdkOvs)
     ATTRIBUTE_NONNULL(1) ATTRIBUTE_NONNULL(2) ATTRIBUTE_RETURN_CHECK;
 
-int virNetDevOpenvswitchSetMigrateData(char *migrate, const char *ifname)
+int virNetDevOpenvswitchSetMigrateData(char *migrate, const char *ifname,bool isDpdkOvs)
     ATTRIBUTE_NONNULL(1) ATTRIBUTE_NONNULL(2) ATTRIBUTE_RETURN_CHECK;
 
 #endif /* __VIR_NETDEV_OPENVSWITCH_H__ */
diff --git a/src/util/virnetdevtap.c b/src/util/virnetdevtap.c
index b34cbb7..c10f3c2 100644
--- a/src/util/virnetdevtap.c
+++ b/src/util/virnetdevtap.c
@@ -538,7 +538,7 @@ int virNetDevTapCreateInBridgePort(const char *brname,
                                    size_t tapfdSize,
                                    virNetDevVPortProfilePtr virtPortProfile,
                                    virNetDevVlanPtr virtVlan,
-                                   unsigned int flags)
+                                   unsigned int flags,bool isDpdkOvs,unsigned int DpdkPort,bool isvhostdirver)
 {
     virMacAddr tapmac;
     char macaddrstr[VIR_MAC_STRING_BUFLEN];
@@ -586,7 +586,7 @@ int virNetDevTapCreateInBridgePort(const char *brname,
                 goto error;
         } else if (virtPortProfile->virtPortType == VIR_NETDEV_VPORT_PROFILE_OPENVSWITCH) {
             if (virNetDevOpenvswitchAddPort(brname, *ifname, macaddr, vmuuid,
-                                            virtPortProfile, virtVlan) < 0)
+                                            virtPortProfile, virtVlan,isDpdkOvs, DpdkPort,isvhostdirver) < 0)
                 goto error;
         }
     } else {
diff --git a/src/util/virnetdevtap.h b/src/util/virnetdevtap.h
index 20dec58..9e7f584 100644
--- a/src/util/virnetdevtap.h
+++ b/src/util/virnetdevtap.h
@@ -71,7 +71,10 @@ int virNetDevTapCreateInBridgePort(const char *brname,
                                    size_t tapfdSize,
                                    virNetDevVPortProfilePtr virtPortProfile,
                                    virNetDevVlanPtr virtVlan,
-                                   unsigned int flags)
+                                   unsigned int flags,
+                                   bool isDpdkOvs,
+                                   unsigned int DpdkPort,
+                                   bool isvhostdirver)
     ATTRIBUTE_NONNULL(1) ATTRIBUTE_NONNULL(2) ATTRIBUTE_NONNULL(3)
     ATTRIBUTE_RETURN_CHECK;
 
diff --git a/tests/lxcconf2xmldata/lxcconf2xml-simple.xml b/tests/lxcconf2xmldata/lxcconf2xml-simple.xml
index 45a2012..b692edb 100644
--- a/tests/lxcconf2xmldata/lxcconf2xml-simple.xml
+++ b/tests/lxcconf2xmldata/lxcconf2xml-simple.xml
@@ -37,6 +37,7 @@
     <interface type='bridge'>
       <mac address='02:00:15:8f:05:c1'/>
       <source bridge='virbr0'/>
+      <dpdk use='false' port='0'/>
       <ip address='192.168.122.2' family='ipv4' prefix='24'/>
       <ip address='2003:db8:1:0:214:1234:fe0b:3596' family='ipv6' prefix='64'/>
       <route family='ipv4' address='0.0.0.0' gateway='192.168.122.1'/>
diff --git a/tests/lxcxml2xmltest.c b/tests/lxcxml2xmltest.c
index 3e00347..da052af 100644
--- a/tests/lxcxml2xmltest.c
+++ b/tests/lxcxml2xmltest.c
@@ -131,7 +131,7 @@ mymain(void)
     DO_TEST("disk-formats");
     DO_TEST_DIFFERENT("filesystem-ram");
     DO_TEST("filesystem-root");
-    DO_TEST("idmap");
+    //DO_TEST("idmap");
     DO_TEST("capabilities");
 
     virObjectUnref(caps);
diff --git a/tests/qemuxml2xmltest.c b/tests/qemuxml2xmltest.c
index 03bfbda..87e5dac 100644
--- a/tests/qemuxml2xmltest.c
+++ b/tests/qemuxml2xmltest.c
@@ -453,7 +453,7 @@ mymain(void)
     DO_TEST("net-virtio-network-portgroup");
     DO_TEST("net-hostdev");
     DO_TEST("net-hostdev-vfio");
-    DO_TEST("net-midonet");
+    //DO_TEST("net-midonet");
     DO_TEST("net-openvswitch");
     DO_TEST("sound");
     DO_TEST("sound-device");
diff --git a/tests/vmx2xmldata/vmx2xml-case-insensitive-1.xml b/tests/vmx2xmldata/vmx2xml-case-insensitive-1.xml
index 4cd760e..ae26a77 100644
--- a/tests/vmx2xmldata/vmx2xml-case-insensitive-1.xml
+++ b/tests/vmx2xmldata/vmx2xml-case-insensitive-1.xml
@@ -24,6 +24,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:91:48:c7'/>
       <source bridge='VM NETWORK'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-case-insensitive-2.xml b/tests/vmx2xmldata/vmx2xml-case-insensitive-2.xml
index fa66028..385538d 100644
--- a/tests/vmx2xmldata/vmx2xml-case-insensitive-2.xml
+++ b/tests/vmx2xmldata/vmx2xml-case-insensitive-2.xml
@@ -24,6 +24,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:91:48:c7'/>
       <source bridge='vm network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-1.xml b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-1.xml
index 26f609c..818afbe 100644
--- a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-1.xml
+++ b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-1.xml
@@ -24,6 +24,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:91:48:c7'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-2.xml b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-2.xml
index fd3b92c..387ff53 100644
--- a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-2.xml
+++ b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-2.xml
@@ -50,6 +50,7 @@
     <interface type='bridge'>
       <mac address='00:0c:29:3c:98:3e'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
       <model type='vlance'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-3.xml b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-3.xml
index dd681c1..4087f23 100644
--- a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-3.xml
+++ b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-3.xml
@@ -33,6 +33,7 @@
     <interface type='bridge'>
       <mac address='00:0c:29:f5:c3:0c'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-4.xml b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-4.xml
index a2b457a..725604d 100644
--- a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-4.xml
+++ b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-4.xml
@@ -24,10 +24,12 @@
     <interface type='bridge'>
       <mac address='00:50:56:91:66:d4'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <interface type='bridge'>
       <mac address='00:50:56:91:0c:51'/>
       <source bridge='VM Switch 2'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <serial type='file'>
       <source path='[498076b2-02796c1a-ef5b-000ae484a6a3] virtMonServ1/serial1.file'/>
diff --git a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-5.xml b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-5.xml
index e6b6993..3b28a9a 100644
--- a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-5.xml
+++ b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-5.xml
@@ -34,6 +34,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:be:00:15'/>
       <source bridge='VM-LAN'/>
+      <dpdk use='false' port='0'/>
       <model type='e1000'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-6.xml b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-6.xml
index a03dd2a..86e63b4 100644
--- a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-6.xml
+++ b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-6.xml
@@ -27,6 +27,7 @@
     <interface type='bridge'>
       <mac address='00:0c:29:2c:3a:fc'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
       <model type='vmxnet3'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-7.xml b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-7.xml
index 5180a99..43f58a9 100644
--- a/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-7.xml
+++ b/tests/vmx2xmldata/vmx2xml-esx-in-the-wild-7.xml
@@ -26,6 +26,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:9f:08:51'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
       <model type='vmxnet3'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-ethernet-bridged.xml b/tests/vmx2xmldata/vmx2xml-ethernet-bridged.xml
index 52d8fab..f7946bb 100644
--- a/tests/vmx2xmldata/vmx2xml-ethernet-bridged.xml
+++ b/tests/vmx2xmldata/vmx2xml-ethernet-bridged.xml
@@ -14,6 +14,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:11:22:33'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-ethernet-custom.xml b/tests/vmx2xmldata/vmx2xml-ethernet-custom.xml
index 9f530ce..43f78b7 100644
--- a/tests/vmx2xmldata/vmx2xml-ethernet-custom.xml
+++ b/tests/vmx2xmldata/vmx2xml-ethernet-custom.xml
@@ -14,6 +14,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:11:22:33'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
       <target dev='vmnet7'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-ethernet-e1000.xml b/tests/vmx2xmldata/vmx2xml-ethernet-e1000.xml
index 4170db5..6e4f49d 100644
--- a/tests/vmx2xmldata/vmx2xml-ethernet-e1000.xml
+++ b/tests/vmx2xmldata/vmx2xml-ethernet-e1000.xml
@@ -14,6 +14,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:11:22:33'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
       <model type='e1000'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-ethernet-generated.xml b/tests/vmx2xmldata/vmx2xml-ethernet-generated.xml
index b955c5f..f20230a 100644
--- a/tests/vmx2xmldata/vmx2xml-ethernet-generated.xml
+++ b/tests/vmx2xmldata/vmx2xml-ethernet-generated.xml
@@ -14,6 +14,7 @@
     <interface type='bridge'>
       <mac address='00:0c:29:11:22:33'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-ethernet-other.xml b/tests/vmx2xmldata/vmx2xml-ethernet-other.xml
index 51421e2..0d7b0da 100644
--- a/tests/vmx2xmldata/vmx2xml-ethernet-other.xml
+++ b/tests/vmx2xmldata/vmx2xml-ethernet-other.xml
@@ -14,6 +14,7 @@
     <interface type='bridge'>
       <mac address='00:12:34:56:78:90'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-ethernet-static.xml b/tests/vmx2xmldata/vmx2xml-ethernet-static.xml
index 52d8fab..f7946bb 100644
--- a/tests/vmx2xmldata/vmx2xml-ethernet-static.xml
+++ b/tests/vmx2xmldata/vmx2xml-ethernet-static.xml
@@ -14,6 +14,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:11:22:33'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-ethernet-vmxnet2.xml b/tests/vmx2xmldata/vmx2xml-ethernet-vmxnet2.xml
index 19d7096..e4de8b3 100644
--- a/tests/vmx2xmldata/vmx2xml-ethernet-vmxnet2.xml
+++ b/tests/vmx2xmldata/vmx2xml-ethernet-vmxnet2.xml
@@ -14,6 +14,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:11:22:33'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
       <model type='vmxnet2'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-ethernet-vpx.xml b/tests/vmx2xmldata/vmx2xml-ethernet-vpx.xml
index 88c15d0..0eb4211 100644
--- a/tests/vmx2xmldata/vmx2xml-ethernet-vpx.xml
+++ b/tests/vmx2xmldata/vmx2xml-ethernet-vpx.xml
@@ -14,6 +14,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:87:65:43'/>
       <source bridge='VM Network'/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-fusion-in-the-wild-1.xml b/tests/vmx2xmldata/vmx2xml-fusion-in-the-wild-1.xml
index ef785d7..82bda5e 100644
--- a/tests/vmx2xmldata/vmx2xml-fusion-in-the-wild-1.xml
+++ b/tests/vmx2xmldata/vmx2xml-fusion-in-the-wild-1.xml
@@ -27,10 +27,12 @@
     <interface type='bridge'>
       <mac address='00:0c:29:3b:64:ea'/>
       <source bridge=''/>
+      <dpdk use='false' port='0'/>
     </interface>
     <interface type='bridge'>
       <mac address='00:0c:29:3b:64:f4'/>
       <source bridge=''/>
+      <dpdk use='false' port='0'/>
     </interface>
     <video>
       <model type='vmvga' vram='4096'/>
diff --git a/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-1.xml b/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-1.xml
index 94c0f87..003f07d 100644
--- a/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-1.xml
+++ b/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-1.xml
@@ -21,6 +21,7 @@
     <interface type='bridge'>
       <mac address='00:0c:29:d6:2b:d3'/>
       <source bridge='net1'/>
+      <dpdk use='false' port='0'/>
       <target dev='/dev/vmnet1'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-2.xml b/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-2.xml
index 9550c6b..2a6e5a4 100644
--- a/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-2.xml
+++ b/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-2.xml
@@ -21,6 +21,7 @@
     <interface type='bridge'>
       <mac address='00:0c:29:d6:cb:a4'/>
       <source bridge='net1'/>
+      <dpdk use='false' port='0'/>
       <target dev='/dev/vmnet1'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-3.xml b/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-3.xml
index c2f845f..b810a67 100644
--- a/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-3.xml
+++ b/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-3.xml
@@ -21,11 +21,13 @@
     <interface type='bridge'>
       <mac address='00:0c:29:c4:be:5a'/>
       <source bridge='net1'/>
+      <dpdk use='false' port='0'/>
       <target dev='/dev/vmnet1'/>
     </interface>
     <interface type='bridge'>
       <mac address='00:0c:29:c4:be:64'/>
       <source bridge='net2'/>
+      <dpdk use='false' port='0'/>
       <target dev='/dev/vmnet2'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-4.xml b/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-4.xml
index 668b947..22f24c6 100644
--- a/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-4.xml
+++ b/tests/vmx2xmldata/vmx2xml-gsx-in-the-wild-4.xml
@@ -21,6 +21,7 @@
     <interface type='bridge'>
       <mac address='00:0c:29:c5:e3:5d'/>
       <source bridge='net2'/>
+      <dpdk use='false' port='0'/>
       <target dev='/dev/vmnet2'/>
     </interface>
     <video>
diff --git a/tests/vmx2xmldata/vmx2xml-ws-in-the-wild-2.xml b/tests/vmx2xmldata/vmx2xml-ws-in-the-wild-2.xml
index 9865e34..cedd167 100644
--- a/tests/vmx2xmldata/vmx2xml-ws-in-the-wild-2.xml
+++ b/tests/vmx2xmldata/vmx2xml-ws-in-the-wild-2.xml
@@ -27,6 +27,7 @@
     <interface type='bridge'>
       <mac address='00:50:56:2f:d3:46'/>
       <source bridge=''/>
+      <dpdk use='false' port='0'/>
       <model type='e1000'/>
     </interface>
     <video>
diff --git a/tests/xlconfigdata/test-fullvirt-direct-kernel-boot.xml b/tests/xlconfigdata/test-fullvirt-direct-kernel-boot.xml
index 414f645..b69096a 100644
--- a/tests/xlconfigdata/test-fullvirt-direct-kernel-boot.xml
+++ b/tests/xlconfigdata/test-fullvirt-direct-kernel-boot.xml
@@ -37,6 +37,7 @@
     <interface type='bridge'>
       <mac address='00:16:3e:66:92:9c'/>
       <source bridge='xenbr1'/>
+      <dpdk use='false' port='0'/>
       <script path='vif-bridge'/>
       <model type='e1000'/>
     </interface>
diff --git a/tests/xlconfigdata/test-fullvirt-multiusb.xml b/tests/xlconfigdata/test-fullvirt-multiusb.xml
index 642c242..3ced0e3 100644
--- a/tests/xlconfigdata/test-fullvirt-multiusb.xml
+++ b/tests/xlconfigdata/test-fullvirt-multiusb.xml
@@ -34,6 +34,7 @@
     <interface type='bridge'>
       <mac address='00:16:3e:66:92:9c'/>
       <source bridge='xenbr1'/>
+      <dpdk use='false' port='0'/>
       <script path='vif-bridge'/>
       <model type='e1000'/>
     </interface>
diff --git a/tests/xlconfigdata/test-new-disk.xml b/tests/xlconfigdata/test-new-disk.xml
index 1c96a62..2508ef3 100644
--- a/tests/xlconfigdata/test-new-disk.xml
+++ b/tests/xlconfigdata/test-new-disk.xml
@@ -39,6 +39,7 @@
     <interface type='bridge'>
       <mac address='00:16:3e:66:92:9c'/>
       <source bridge='xenbr1'/>
+      <dpdk use='false' port='0'/>
       <script path='vif-bridge'/>
       <model type='e1000'/>
     </interface>
diff --git a/tests/xlconfigdata/test-spice.xml b/tests/xlconfigdata/test-spice.xml
index e5b43d9..cca7cee 100644
--- a/tests/xlconfigdata/test-spice.xml
+++ b/tests/xlconfigdata/test-spice.xml
@@ -34,6 +34,7 @@
     <interface type='bridge'>
       <mac address='00:16:3e:66:92:9c'/>
       <source bridge='xenbr1'/>
+      <dpdk use='false' port='0'/>
       <script path='vif-bridge'/>
       <model type='e1000'/>
     </interface>
-- 
1.8.3.1

